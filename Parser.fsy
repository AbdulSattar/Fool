%{
open Ast
%}

%token INTTYPE FLOATTYPE CHARTYPE STRINGTYPE BOOLTYPE
%token READ WRITE TRUE FALSE ASSIGN DELIM
%token <string> IDENT
%token <int> INTLIT
%token <float> FLOATLIT
%token <char> CHARLIT
%token <string> STRINGLIT
%token LBRACE RBRACE EOF
%token EMPTY

%start Prog

%type <Prog> Prog

%%
Prog:
| Stmts EOF {StmtsProg($1)}

Block:
| LBRACE Stmts RBRACE { StmtsBlock($2) }

Stmts:
| StmtsList { StmtsList(List.rev $1) }
StmtsList:
| StmtsList Stmt { $2 :: $1 }
| Stmt { [$1] }

Stmt:
| Type Identifier ASSIGN Value DELIM { DeclStmt($1, $2, $4) }
| READ Identifier DELIM { ReadStmt($2) }
| WRITE Value DELIM { WriteStmt($2) }
| Block DELIM { BlockStmt($1) }
| Value DELIM { ValueStmt($1) }

Value:
| Identifier ASSIGN Value { AssignValue($1,$3) }
| Identifier { IdentifierValue($1) }
| Literal { LiteralValue($1) }

Literal:
| INTLIT { IntLit($1) }
| FLOATLIT { FloatLit($1) }
| CHARLIT { CharLit($1) }
| STRINGLIT { StringLit($1) }
| BoolLiteral { BoolLit($1) }

BoolLiteral:
| TRUE { TrueBool }
| FALSE { FalseBool }

Identifier:
| IDENT { Identifier($1) }

Type:
| INTTYPE { IntType }
| FLOATTYPE { FloatType }
| CHARTYPE { CharType }
| STRINGTYPE { StringType }
| BOOLTYPE { BoolType }